swagger: "2.0"
info:
  description: This is the Lydia API
  version: 1.0.0
  title: Lydia API
  contact:
    email: gr-lydia@wpi.edu

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: admins
  description: Secured Admin-only calls
- name: consumers
  description: Operations available to regular consumers

paths:
  /upload-segment:
    post:
      tags:
      - consumers
      summary: Requests to uploads a video segment
      operationId: uploadVideoSegment
      description: Requests to upload a video segment
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: UploadVideoSegmentRequest
        description: Uploads a video segment
        required: true
        schema:
          $ref: '#/definitions/UploadVideoSegmentRequest'
      responses:
        200:
          description: video segment uploaded
        400:
          description: invalid video segment
  /delete-segment:
    post:
      tags:
      - consumers
      summary: request to delete a video segment
      operationId: deleteVideoSegment
      description: Requests to delete a video segment by id.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DeleteVideoSegmentRequest
        description: Delete a video segment
        required: true
        schema:
          $ref: '#/definitions/DeleteVideoSegmentRequest'
      responses:
        200:
          description: video segment deleted
        400:
          description: invalid video segment
        409:
          description: unable to delete video segement   
  /list-segments:
    get:
      tags:
      - consumers
      summary: request a list of all video segments
      operationId: listVideoSegments
      description: Returns a list of all video segments
      produces:
      - application/json
      responses:
        200:
          description: list of video segments returned
        400: 
          description: unable to get list of video segments
  /search-segments:
    get:
      tags:
      - consumers
      summary: searches for a specific segment
      operationId: searchVideoSegments
      description: Returns video segments fitting the user's search criteria
      produces:
      - application/json
      parameters:
      - in: query
        name: searchBy
        type: string
      - in: query
        name: search
        type: string
      responses:
        200:
          description: found video segments returned
        409:
          description: unable to access video segments
  /create-playlist:
  	post:
  	  tags:
  	  - consumers
  	  summary: creates a playlist
  	  operationId: requestCreatePlaylist
      description: Requests to create a new empty playlist of video segments
  	  consumes:
  	  - application/json
  	  produces:
  	  - application/json
  	  parameters:
  	  - in: body
  	    name: CreatePlaylistRequest
  	    description: Create a playlist for segments to be added to
        required: true
  	    schema:
  	      $ref: '#/definitions/CreatePlaylistRequest'
  	  responses: 
  	    200:
  	      description: playlist created
        400:
          description: playlist already exists
        409:
          description: unable to create playlist
  /delete-playlist:
  	post:
  	  tags:
  	  - consumers
  	  summary: deletes a playlist
  	  operationId: requestDeletePlaylist
  	  description: Requests to delete an existing playlist by name
  	  consumes:
  	  - application/json
  	  produces:
  	  - application/json
  	  parameters:
  	  - in: body
  	    name: DeletePlaylistRequest
  	    description: Delete a playlist
        required: true
  	    schema:
  	      $ref: '#/definitions/DeletePlaylistRequest'
  	  responses:
  	    200: 
  	      description: playlist deleted
  	    400:
  	      description: invalid playlist
        409:
          description: unable to delete playlist
  /list-playlists:
  	get:
  	  tags:
  	  - consumers
  	  summary: request a list of all playlists
  	  operationId: getPlaylistsList
      description: Returns a list of all playlists
  	  produces:
  	  - application/json
  	  responses:
  	    200:
  	      description: list of all playlists returned
        400: 
          description: unable to get list of all playlists
  /list-playlist-segments:
    get:
      tags:
      - consumers
      summary: request the segments in a given playlist
      operationID: listPlaylistSegments
      description: request the list of segments that a given playlist contains
      produces:
      - application/json
      parameters:
      - in: query
        name: playlistName
        type: string
      responses:
        200:
          description: list of segments in playlist returned
        400:
          description: playlist does not exist
        409:
          description: unable to retrieve segments in playlist
  /remove-from-playlist:
  	post:
  	  tags:
  	  - consumers
  	  summary: request to remove a video segment from a playlist
  	  description: Requests to remove a video segment from a playlist by id
  	  operationId: requestRemoveVideoSegmentFromPlaylist
  	  consumes:
  	  - application/json
  	  produces:
  	  - application/json
  	  parameters:
  	  - in: body
  	    name: RemoveSegmentFromPlaylistRequest
  	    description: Remove a video segment from a playlist
        required: true
  	    schema:
  	      $ref: '#/definitions/RemoveSegmentFromPlaylistRequest'
  	    responses:
  	      200: 
  	        description: segment removed
  	      400: 
  	        description: invalid segment
          409:
            description: unable to remove segment
  /add-to-playlist:
  	post:
  		tags:
  		- consumers
      summary: request to add a segment to a playlist
      description: Requests to add a segment to the end of a playlist
      operationId: requestAddSegmentToPlaylist
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AddSegmentToPlaylistRequest
        description: Add a segment to the end of a playlist
        required: true
        schema:
          $ref: '#/definitions/AddSegmentToPlaylistRequest'
        responses:
          200:
            description: segment added
          400: 
  	        description: invalid request
          409:
            description: unable to add segment
  /mark-unmark-local:
     post:
        tags:
        - admins
        summary: marks/unmarks a local segment
        operationId: markUnmarkSegmentAsLocal
        description: Takes a local video segment and sets it to be marked or unmarked as local
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - in: body
          name: ChangeMarkSegment
          description: Flip the value of marking the segment
          required: true
          schema:
            $ref: '#/defintions/ChangeMarkSegment'
        responses:
          200:
            description: value updated successfully
          400:
            description: invalid request
          404:
            description: segment not found 
          409:
            description: unable to update         
  /register-site:
     post:
        tags:
        - admins
        summary: registers a remote site
        description: Registers a connection to a remote site
        operationId: registerRemoteSite
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - in: url
          name: RegisterRemoteSite
          description: Registers a connection to a remote site
          required: true
          schema:
            $ref: '#/definitions/RegisterRemoteSite'
        responses:
          200:
            description: connection established
          400:
            description: invalid request
          409:
            description: invalid url, unable to register
  /unregister-site:
     post:
        tags:
        - admins
        summary: unregisters a remote site
        description: Unregisters a connection to a remote site
        operationId: unregisterRemoteSite
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - in: url
          name: UnregisterRemoteSite
          description: Unregisters a connection to a remote site
          required: true
          schema:
            $ref: '#/definitions/UnregisterRemoteSite'
          responses:
            200:
              description: connection established
            400:
              description: invalid request
            409:
              description: invalid url, unable to register          
  /list-sites:
     get:
        tags:
        - admins
        summary: return a list of all registered sites
        operationId: getRegisteredSites
        description: Returns a list of all registered sites
        produces:
        - application/json
        responses:
          200:
            description: list of registered sites returned
          400:
            description: invalid request
          409:
            description: unable to list sites
   
      
definitions:
  UploadVideoSegmentRequest:
    type: object
    required:
    - name
    - character
    - sentence
    properties:
      name:
        type: string
        example: The salt clip
      character:
        type: string
        example: Spock
      sentence:
        type: string
        example: That is illogical, captain.
  DeleteVideoSegmentRequest:
    type: object
    required:
    - name
    properties:
      name:
        type: string
        example: the salt clip
  CreatePlaylistRequest:
    type: object
    required:
    - name
    properties:
      name:
        type: string
        example: spockFlirting
  DeletePlaylistRequest:
    type: object
    required:
    - name
    properties:
      name:
        type: string
        example: spockFlirting
  RemoveSegmentFromPlaylistRequest:
    type: object
    required:
    - segmentName
    - playlistName
    properties:
      segmentName: 
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      playlistName:
        type: string
        example: spockFlirting
  AddSegmentToPlaylistRequest:
    type: object
    required:
    - segmentName
    - playlistName
    properties:
      segmentName:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      playlistName:
        type: string
        example: spockFlirting
  ChangeMarkSegment:
     type: object
     required:
     - segmentName
     properties:
        segmentName:
           type: string
           example: The salt clip
  RegisterRemoteSite:
     type: object
     required:
     - url
     properties:
        url:
           type: string
           example: https://www.youtube.com/watch?v=dQw4w9WgXcQ
  UnregisterRemoteSite:
     type: object
     required:
     - url
     properties:
        url:
           type: string
           example: https://www.youtube.com/watch?v=q6EoRBvdVPQ
      

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /cs3733Lydia/Lydia/1.0.0
schemes:
 - https